# -*- coding: utf-8 -*-
"""gee_visualizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A2W5iMU9AhNLektcPwVK0ppzPh2w6A20
"""

import ee
import matplotlib.pyplot as plt
import numpy as np
from PIL import Image
import io
import requests
import argparse

# --- Инициализация GEE ---
try:
    ee.Initialize(project='ee-losevandrej784')
except ee.EEException:
    ee.Authenticate()
    ee.Initialize(project='ee-losevandrej784')

def plot_gee_images(lon, lat, start_date, end_date, buffer_radius=2000):
    """
    Визуализирует RGB снимки из GEE для заданной области и периода.
    """
    print(f"Визуализация области {buffer_radius}м вокруг точки (LAT={lat}, LON={lon})")
    print(f"Период: с {start_date} по {end_date}")

    point = ee.Geometry.Point(lon, lat)
    aoi = point.buffer(buffer_radius).bounds()

    collection = (ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
                  .filterBounds(aoi)
                  .filterDate(start_date, end_date)
                  .sort('CLOUDY_PIXEL_PERCENTAGE'))

    image_list = collection.toList(collection.size())
    num_images = image_list.size().getInfo()

    if num_images == 0:
        print("Изображения не найдены за указанный период.")
        return

    print(f"Найдено изображений: {num_images}")

    vis_params = {
        'bands': ['B4', 'B3', 'B2'],
        'min': 0, 'max': 3000,
        'region': aoi, 'dimensions': 512,
        'format': 'png'
    }

    for i in range(num_images):
        image = ee.Image(image_list.get(i))
        thumbnail_url = image.getThumbURL(vis_params)

        response = requests.get(thumbnail_url)
        img = Image.open(io.BytesIO(response.content))

        plt.figure(figsize=(10, 10))
        plt.imshow(img)
        plt.title(f"RGB ({lat}, {lon})\n"
                  f"Дата: {image.date().format('YYYY-MM-dd').getInfo()}\n"
                  f"Облачность: {image.get('CLOUDY_PIXEL_PERCENTAGE').getInfo():.2f}%")
        plt.axis('off')
        plt.show()

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Визуализатор RGB снимков из Google Earth Engine.")
    parser.add_argument('--lon', type=float, required=True, help="Долгота центральной точки.")
    parser.add_argument('--lat', type=float, required=True, help="Широта центральной точки.")
    parser.add_argument('--start_date', type=str, required=True, help="Дата начала в формате YYYY-MM-DD.")
    parser.add_argument('--end_date', type=str, required=True, help="Дата окончания в формате YYYY-MM-DD.")
    parser.add_argument('--radius', type=int, default=2000, help="Радиус буфера в метрах (по умолчанию: 2000).")

    args = parser.parse_args()

    plot_gee_images(args.lon, args.lat, args.start_date, args.end_date, args.radius)